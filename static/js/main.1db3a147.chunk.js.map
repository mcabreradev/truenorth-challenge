{"version":3,"sources":["components/Error/index.js","components/Header/index.js","components/Filters/index.js","components/Loading/index.js","util/index.js","util/api.js","store/actions/actions.js","store/actions/types.js","containers/FiltersContainer/index.js","components/Restaurants/index.js","components/Rating/index.js","components/Restaurant/index.js","components/Modal/index.js","components/Order/RestaurantDetails/index.js","components/Order/CustomerDetails/index.js","components/Order/MealsDetails/index.js","components/Order/index.js","containers/RestaurantsContainer/index.js","containers/OrderContainer/index.js","containers/App/index.js","containers/Root.js","serviceWorker.js","store/reducers/reducers.js","store/reducers/index.js","store/index.js","index.js"],"names":["Error","react_default","a","createElement","className","styles","padding","Header","href","concat","process","style","data-target","Filters","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onChange","bind","assertThisInitialized","e","target","name","setName","value","setSortBy","_this$props","sortBy","type","placeholder","Component","defaultProps","Loading","isActive","text","filterRestaurants","state","restaurants","filter","restaurant","commercialName","toLowerCase","indexOf","address","sort","last","next","rating","findColor","color","loopOverTotals","totals","totalFull","key","hasOwnProperty","total","toCurrency","number","toLocaleString","ENDPOINT","toggleModal","resto_id","dispatch","getState","payload","reviewedRestaurant","data","find","resto","_id","error","console","mapActionToProps","setTimeout","_ref3","asyncToGenerator","regenerator_default","mark","_callee3","wrap","_context3","prev","stop","_x5","_x6","apply","arguments","connect","Container","styled","div","_templateObject","Restaurants","onClickHandlerOpenReview","fetchRestaurants","_this2","isLoading","selectedSortby","tryAgain","renderLoading","components_Loading","FiltersContainer","length","map","components_Restaurant","assign","onClick","components_Modal","Rating","_ref","stars","Array","fill","star","index","Math","floor","title","Restaurant","logo","reviews","src","alt","components_Rating","Link","to","Modal","isModalActive","review","aria-label","RestaurantDetails","CustomerDetails","handleChange","setState","handleSelect","geocodeByAddress","then","results","setOrderDetails","formatted_address","catch","log","defineProperty","autoComplete","dist_default","onSelect","getInputProps","suggestions","getSuggestionItemProps","loading","suggestion","active","backgroundColor","cursor","description","MealsDetails","onChagenQty","meals","id","price","setTotalPrice","parseInt","totalSelectedMeals","meal","img","num","values","colSpan","Order_templateObject","Order","onClickHandler","isSubmitted","fetchRestaurantById","match","params","orderDetails","Order_Container","Order_RestaurantDetails","Order_CustomerDetails","Order_MealsDetails","disabled","_callee","response","_context","axios","get","sent","t0","_x","_x2","filteredRestaurants","_ref2","_callee2","_context2","restaurant_id","_x3","_x4","mealId","details","App","components_Header","BrowserRouter","Switch","Route","exact","path","component","RestaurantContainer","OrderContainer","Root","store","history","react_redux_es","containers_App","Boolean","window","location","hostname","initialState","combineReducers","undefined","action","objectSpread","keys","middleware","thunk","createStore","rootReducer","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION__","createBrowserHistory","ReactDOM","render","containers_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1db3a147.chunk.js","sourcesContent":["import React from 'react';\n\nconst Error = () => (\n    <h2 className=\"title is-2 has-text-grey has-text-centered\">404 NotFound</h2>\n);\n \nexport default Error;","import React from 'react';\n\nconst styles = {\n  padding: \"19px 0px 0px 0px\"\n};\n\nconst Header = () => ( \n  <nav className=\"navbar is-fixed-top is-danger\">\n    <div className=\"navbar-brand\">\n        <a href={`${process.env.PUBLIC_URL}/`}><span className=\"navbar-item has-text-weight-semibold is-size-4 has-text-white\">Restoservice</span></a>\n        <small className=\"has-text-weight-light\" style={styles}> v1.0</small>\n        <div className=\"navbar-burger burger\" data-target=\"navMenuColorinfo-example\"> <span /> <span /> <span />\n        </div>\n    </div>\n\n    <div className=\"navbar-menu\">\n        <div className=\"navbar-end\">\n    \n        </div>\n    </div>\n  </nav>\n);\n\nexport default Header;","import React, { Component } from 'react';\n\nclass Filters extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n    }\n    \n    onChange(e) {\n        switch (e.target.name) {\n            case \"name\":\n                this.props.setName(e.target.value);\n                break;\n            \n            case \"sortBy\":\n                this.props.setSortBy(e.target.value);\n                break;\n        \n            default:\n                break;\n        }\n    }\n\n    render() { \n        const { name, sortBy } = this.props;\n\n        return (\n            <div className=\"columns filters\"> \n                <div className=\"field column is-7\">\n                    <div className=\"control is-medium has-icons-right\">\n                        <input className=\"input is-medium\" type=\"text\" placeholder=\"Restaurant or Address\" name=\"name\" value={ name } onChange={ this.onChange } />\n                        <span className=\"icon is-medium is-right\"><i className=\"fas fa-search\"></i></span>\n                    </div>\n                </div>\n\n                <div className=\"field column is-5 is-horizontal\">\n                    <div className=\"field-label is-normal\">\n                        <label className=\"label\">Sort By</label>\n                    </div>\n                    <div className=\"field-body\">\n                        <div className=\"control is-expanded\">\n                            <div className=\"select is-medium is-fullwidth\">\n                                <select name=\"sortBy\" onChange={ this.onChange } >\n                                    <option value=\"\">{ sortBy === \"\" ? \"Select\" : \"-- Reset Filter\" }</option>\n                                    <option value=\"highest_rated\">Highest Rated</option>\n                                    <option value=\"lower_rated\">Lower Rated</option>\n                                </select>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nFilters.defaultProps = {  \n    name: \"\",\n    sortBy: \"\",\n};\n\nexport default Filters;\n","import React from 'react';\n\nconst Loading = (props) =>  (\n    <div className={\"pageloader has-background-danger \" + ( props.isActive ? 'is-active' : '')}>\n        <span className=\"title\">{ props.text }</span>\n    </div>\n);\n\nLoading.defaultProps = {  \n    text: \"Loading..\",\n    isActive: false \n};\n\nexport default Loading;","export const filterRestaurants = (state) => {\n\n    const {\n        restaurants,\n        name,\n        sortBy\n    } = state;\n\n    return restaurants.filter(restaurant => {\n        return restaurant.commercialName.toLowerCase().indexOf(name.toLowerCase()) >= 0 || restaurant.address.toLowerCase().indexOf(name.toLowerCase()) >= 0;\n    })\n    .sort((last, next) => {\n\n        if (sortBy === \"\") {\n            return last.commercialName > next.commercialName ? 1 : -1; // sort by name ASC \n        }\n\n        // next.rating - last.rating -> ASC\n        // last.rating - next.rating -> DESC\n        return sortBy === \"highest_rated\" ? next.rating - last.rating : last.rating - next.rating;\n    });\n}\n\nexport const findColor = (rating) => {\n    let color = \"has-background-success\";\n\n    if (rating < 2){\n        color = \"has-background-danger\";\n    }\n    if (rating >=2 && rating <= 3){\n        color = \"has-background-warning\";\n    }\n    else if(rating >=3 && rating <= 4){\n        color = \"has-background-info\";\n    }\n\n    return color;\n}\n\nexport const stringToSlug = (str) => {\n    str = str.replace(/^\\s+|\\s+$/g, \"\"); // trim\n    str = str.toLowerCase();\n  \n    // remove accents, swap ñ for n, etc\n    var from = \"åàáãäâèéëêìíïîòóöôùúüûñç·/_,:;\";\n    var to = \"aaaaaaeeeeiiiioooouuuunc------\";\n  \n    for (var i = 0, l = from.length; i < l; i++) {\n      str = str.replace(new RegExp(from.charAt(i), \"g\"), to.charAt(i));\n    }\n  \n    str = str\n      .replace(/[^a-z0-9 -]/g, \"\") // remove invalid chars\n      .replace(/\\s+/g, \"-\") // collapse whitespace and replace by -\n      .replace(/-+/g, \"-\") // collapse dashes\n      .replace(/^-+/, \"\") // trim - from start of text\n      .replace(/-+$/, \"\"); // trim - from end of text\n  \n    return str;\n  }\n\nexport const loopOverTotals = (totals) => {\n    let totalFull = 0;\n\n    for (let key in totals) {\n        if (totals.hasOwnProperty(key)) {\n            totalFull = totals[key].total + totalFull;\n        }\n    }\n\nreturn totalFull;\n}\n\nexport const toCurrency = number => '$' + number.toLocaleString('es-AR');","import axios from 'axios';\n\nexport const ENDPOINT = \"https://mcabreradev-truenorth-api.herokuapp.com\";\n\nexport const findAll = () => {\n    return axios.get(`${ENDPOINT}/restaurants`)\n}\n\nexport const findById= (restaurant_id) => {\n    return axios.get(`${ENDPOINT}/restaurants?_id=${restaurant_id}`);\n}","import {\n    FETCH_RESTAURANTS,\n    FETCH_RESTAURANT_BY_ID,\n    FILTER_RESTAURANTS,\n    SET_NAME,\n    SET_SORTBY,\n    TOGGLE_LOADING,\n    TOGGLE_MODAL,\n    SET_TOTAL_PRICE,\n    SET_ORDER_DETAILS,\n} from './types';\nimport { filterRestaurants } from '../../util';\nimport { findAll, findById } from '../../util/api';\n\nexport const fetchRestaurants = () => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: TOGGLE_LOADING,\n            payload: true\n        });\n\n        const response = await findAll();\n        const restaurants = response.data.data;\n\n        dispatch({\n            type: FETCH_RESTAURANTS,\n            payload: restaurants\n        });\n\n        dispatch({\n            type: FILTER_RESTAURANTS,\n            payload: filterRestaurants(getState().data)\n        });\n\n        dispatch({\n            type: TOGGLE_LOADING,\n            payload: false\n        });\n\n    } catch (error) {\n        console.error(error);\n        dispatch({\n            type: TOGGLE_LOADING,\n            payload: false\n        });\n    }\n};\n\nexport const fetchRestaurantById= (resto_id) => async (dispatch, getState) => {\n    try {\n\n        dispatch({\n            type: TOGGLE_LOADING,\n            payload: true\n        });\n\n        const response = await findById(resto_id);\n        const restaurant = response.data.data[0];\n\n        dispatch({\n            type: FETCH_RESTAURANT_BY_ID,\n            payload: restaurant\n        });\n\n        dispatch({\n            type: TOGGLE_LOADING,\n            payload: false\n        });\n\n    } catch (error) {\n        console.error(error);\n        dispatch({\n            type: TOGGLE_LOADING,\n            payload: false\n        });\n    }\n};\n\nexport const filterData = () => (dispatch, getState) => {\n    dispatch({\n        type: FILTER_RESTAURANTS,\n        payload: filterRestaurants(getState().data)\n    });\n};\n\nexport const setName = (name) => (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SET_NAME,\n            payload: name\n        });\n\n        // fake async delay\n        setTimeout(() => dispatch({\n            type: FILTER_RESTAURANTS,\n            payload: filterRestaurants(getState().data)\n        }), 400);\n        \n\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport const setSortBy = (sortBy) => async (dispatch, getState) => {\n    try {\n        dispatch({\n            type: SET_SORTBY,\n            payload: sortBy\n        });\n\n        // fake async delay\n        setTimeout(() => dispatch({\n            type: FILTER_RESTAURANTS,\n            payload: filterRestaurants(getState().data)\n        }), 100);\n        \n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport const toggleModal = (isActive, resto_id) => (dispatch, getState) => {\n    try {\n        dispatch({\n            type: TOGGLE_MODAL,\n            payload: isActive,\n            reviewedRestaurant: typeof resto_id !== \"undefined\" ? getState().data.restaurants.find(resto => resto._id === resto_id) : []\n        });\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport const setTotalPrice = (total, mealId) => (dispatch) => {\n    try {\n        dispatch({\n            type: SET_TOTAL_PRICE,\n            total: total,\n            mealId\n        });\n    } catch (error) {\n        console.error(error);\n    }\n};\n\nexport const setOrderDetails= (details) => (dispatch) => {\n    try {\n        dispatch({\n            type: SET_ORDER_DETAILS,\n            payload: details\n        });\n    } catch (error) {\n        console.error(error);\n    }\n};","export const FETCH_RESTAURANTS = \"FETCH_RESTAURANTS\";\nexport const FILTER_RESTAURANTS = \"FILTER_RESTAURANTS\";\nexport const FETCH_RESTAURANT_BY_ID = \"FETCH_RESTAURANT_BY_ID\";\nexport const SET_NAME = \"SET_NAME\";\nexport const SET_SORTBY = \"SET_SORTBY\";\nexport const TOGGLE_LOADING = \"TOGGLE_LOADING\";\nexport const TOGGLE_MODAL = \"TOGGLE_MODAL\";\nexport const SET_TOTAL_PRICE = \"SET_TOTAL_PRICE\";\nexport const SET_ORDER_DETAILS = \"SET_ORDER_DETAILS\";\n","import { connect } from 'react-redux';\nimport { setName, setSortBy } from '../../store/actions/actions';\nimport { Filters } from '../../components';\n\nconst mapStateToProps = state => ({\n    name: state.data.name,\n    sortBy: state.data.sortBy\n });\n\n const mapActionToProps = {\n    setName,\n    setSortBy,\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Filters);","import React, { Component } from 'react';\nimport { Restaurant, Loading, Modal } from '../../components';\nimport FilterContainer from '../../containers/FiltersContainer';\nimport './styles.css';\n\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n  top: 40px;\n  position: relative;\n`;\nclass Restaurants extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onClickHandlerOpenReview = this.onClickHandlerOpenReview.bind(this);\n    }\n\n    componentWillMount() {\n       this.props.fetchRestaurants();\n    }\n\n    onClickHandlerOpenReview(resto_id){\n        this.props.toggleModal(true, resto_id);\n    }\n\n    render() { \n        const { restaurants , isLoading, name, selectedSortby, tryAgain, renderLoading } = this.props;\n\n        return ( \n            <Container className=\"container\">\n                <Loading isActive={isLoading} />\n                <FilterContainer />\n                <div className=\"columns is-multiline\">\n                    <div className=\"column is-12-desktop is-12-tablet\">\n                        { \n                            restaurants.length ? \n                            restaurants.map( resto => <Restaurant {...resto} key={resto._id} onClick={this.onClickHandlerOpenReview}/>) : \n                            (name.length || selectedSortby.length) ? tryAgain : renderLoading \n                        }\n                    </div>\n                </div>\n                <Modal {...this.props}/>\n            </Container>\n         );\n    }\n}\n \nRestaurants.defaultProps = {  \n    renderLoading: <div className=\"container\">loading...</div>, \n    tryAgain: <div className=\"container\">Restaurant was not found!, try again</div>, \n};\n\nexport default Restaurants;","import React from 'react';\n\nconst Rating = ({rating}) => {\n\n    const stars = Array(5)\n        .fill('star')\n        .map( (star, index) => {\n            let className = \"fas fa-star has-text-grey-lighter\"; // empty star by default\n\n            if( (index + 1) <= Math.floor(rating) ) {\n                className = \"fas fa-star has-text-warning\"; // full star\n            }\n\n            return <i className={ className } key={ star + index }></i>;\n        })\n\n    return ( \n        <div title={ 'Rate ' + rating }>\n            { stars }\n        </div>\n    )\n};\n\nexport default Rating;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport Rating from '../Rating';\nimport { findColor } from '../../util';\n\nimport './styles.css';\n\nclass Restaurant extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick() {\n        this.props.onClick(this.props._id);\n    }\n\n    render() { \n        const { logo, commercialName, rating, reviews, address, _id } = this.props;\n\n        return (\n            <div className=\"box restaurant\">\n                <article className=\"media restaurant-details\">\n\n                    <div className=\"media-left\">\n                        <figure className=\"image\">\n                            <img src={ logo } alt=\"Imagee\" />\n                        </figure>\n                    </div>\n\n                    <div className=\"media-content columns\">\n                        <div className=\"content column is-four-fifths\">\n                            <div className=\"is-size-5 has-text-weight-semibold has-text-grey restaurant-name\">{ commercialName }</div>\n\n                            <div className=\"is-flex restaurant-rating\">\n                                <span className={\"tag has-text-white is-radiusless restaurant-tag has-text-weight-semibold \" + (findColor(rating)) }>{ rating }</span> \n                                <Rating rating={ rating }/> \n                                <span className=\"is-size-7 has-text-link restaurant-reviews\" name=\"review\" onClick={ this.onClick }>{ reviews.length } Reviews</span>\n                            </div>\n\n                            <div>\n                                <i className=\"has-text-grey-lighter fas fa-map-marker-alt restaurant-marker\"></i> \n                                <span className=\"is-size-7 restaurant-address\">{ address }</span> \n                            </div>\n                        </div>\n\n                        <div className=\"column\">\n                            <Link to={`${process.env.PUBLIC_URL}/restaurants/${_id}`}><span className=\"button is-small is-danger is-pulled-right order-button\"> Order food</span></Link>\n                        </div>\n                    </div>\n                </article>\n            </div>\n        )\n    }\n}\n\nexport default Restaurant;\n","import React, { Component } from 'react';\nimport { findColor } from '../../util';\nimport './styles.css';\n\nclass Modal extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick(e) {\n        this.props.toggleModal(false);\n    }\n\n    render() { \n        const { isModalActive, reviewedRestaurant } = this.props;\n\n        return isModalActive ? (\n            <div className={ \"modal \" + (isModalActive ? \"is-active\" : \"\")}>\n                <div className=\"modal-background\"></div>\n                <div className=\"modal-content\">\n                    <div className=\"box\">\n                        <div className=\"content is-small\">\n                            <h1>{ reviewedRestaurant.commercialName }'s Reviews</h1>\n                            { \n                                reviewedRestaurant.reviews.map( (review, index) => {\n                                    return (\n                                        <div key={index}>\n                                            <div className=\"is-divider\"></div>\n                                            <span className={\"tag has-text-white is-radiusless restaurant-tag has-text-weight-semibold \" + (findColor(review.rating)) }>{ review.rating }</span>\n                                            <p className=\"modal-review\">\n                                                <span className=\"has-text-grey has-text-weight-semibold\">{ review.name }: </span>\n                                                \"<span className=\"is-italic\">{ review.review }</span>\"\n                                            </p>\n                                        </div>\n                                    )\n                                })\n                            }\n                            <div className=\"is-divider\"></div>\n                        </div>\n                    </div>\n                </div>\n                <button className=\"modal-close is-large\" aria-label=\"close\" onClick={this.onClick}></button>\n            </div>\n          ) : null ;\n    }\n}\n\nexport default Modal;","import React, { Component } from 'react';\nimport { findColor } from '../../../util';\nimport Rating from '../../Rating';\nimport Modal from '../../Modal';\n\nclass RestaurantDetails extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onClickHandlerOpenReview = this.onClickHandlerOpenReview.bind(this);\n    }\n\n    onClickHandlerOpenReview(){\n        this.props.toggleModal(true, this.props.restaurant._id);\n    }\n\n    render() { \n        const { restaurant } = this.props;\n\n        return (\n            <article className=\"media restaurant-details\">\n                <div className=\"media-left\">\n                    <figure className=\"image is-128x128\">\n                        <img src={ restaurant.logo } alt={ restaurant.commercialName } />\n                    </figure>\n                </div>\n\n                <div className=\"media-content columns\">\n                    <div className=\"content column is-four-fifths\">\n                        <div className=\"is-size-5 has-text-weight-semibold has-text-grey restaurant-name\">{ restaurant.commercialName }</div>\n\n                        <div className=\"is-flex restaurant-rating\">\n                            <span className={\"tag has-text-white is-radiusless restaurant-tag has-text-weight-semibold \" + (findColor(restaurant.rating)) }>{ restaurant.rating }</span> \n                            <Rating rating={ restaurant.rating }/> \n                            <span className=\"is-size-7 has-text-link restaurant-reviews\" name=\"review\" onClick={ this.onClickHandlerOpenReview }>{ restaurant.reviews.length } Reviews</span>\n                        </div>\n\n                        <div>\n                            <i className=\"has-text-grey-lighter fas fa-map-marker-alt restaurant-marker\"></i> \n                            <span className=\"is-size-7 restaurant-address\">{ restaurant.address }</span> \n                        </div>\n                    </div>\n                </div>\n                <Modal {...this.props}/>\n            </article>\n        )   \n    }\n}\n\nexport default RestaurantDetails;\n","import React, { Component } from 'react';\nimport PlacesAutocomplete, {\n    geocodeByAddress\n  } from 'react-places-autocomplete';\n\nclass CustomerDetails extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSelect = this.handleSelect.bind(this);\n        this.state = { address: '' };\n    }\n\n    onChange(e) {\n        console.log(e.target.name, e.target.value);\n        this.props.setOrderDetails({[e.target.name]: e.target.value});\n    }\n\n    handleChange = address => {\n        this.setState({ address })\n    };\n    \n    handleSelect = address => {\n        this.setState({ address });\n\n        geocodeByAddress(address)\n            .then(results => this.props.setOrderDetails({address: results[0].formatted_address}))\n            .catch(error => console.error('Error', error));\n    };\n\n    render() { \n\n\n        return  true ? (\n            <div className=\"content is-small\">\n                <h2>Customer details</h2>\n                <p>Please enter the customer details</p>\n\n                <form className=\"column is-7\" autoComplete=\"off\">\n                    <div className=\"field\">\n                        <label className=\"label\">Name</label>\n                        <div className=\"control\">\n                            <input className=\"input\" type=\"text\" placeholder=\"Name\" name=\"name\" onChange={this.onChange} />\n                        </div>\n                    </div>\n\n                    <div className=\"field\">\n                        <label className=\"label\">Last Name</label>\n                        <div className=\"control\">\n                            <input className=\"input\" type=\"text\" placeholder=\"Last Name\" name=\"lastname\" onChange={this.onChange} />\n                        </div>\n                    </div>\n\n                    <div className=\"field\">\n                        <label className=\"label\">Phone Number</label>\n                        <div className=\"control\">\n                            <input className=\"input\" type=\"text\" placeholder=\"Phone Number\" name=\"phone\" onChange={this.onChange} />\n                        </div>\n                    </div>\n\n                    <div className=\"field\">\n                        <label className=\"label\">Address</label>\n                        \n                        <PlacesAutocomplete\n                            value={this.state.address}\n                            onChange={this.handleChange}\n                            onSelect={this.handleSelect}\n                        >\n                            {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n                            <div className=\"control\">\n                                <input\n                                {...getInputProps({\n                                    placeholder: 'Search Places ...',\n                                    className: 'input location-search-input',\n                                })}\n                                />\n                                <div className=\"autocomplete-dropdown-container\">\n                                {loading && <div>Loading...</div>}\n                                {suggestions.map(suggestion => {\n                                    const className = suggestion.active\n                                    ? 'suggestion-item--active'\n                                    : 'suggestion-item';\n                                    // inline style for demonstration purpose\n                                    const style = suggestion.active\n                                    ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                                    : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                                    return (\n                                    <div\n                                        {...getSuggestionItemProps(suggestion, {\n                                        className,\n                                        style,\n                                        })}\n                                    >\n                                        <span>{suggestion.description}</span>\n                                    </div>\n                                    );\n                                })}\n                                </div>\n                            </div>\n                            )}\n                        </PlacesAutocomplete>\n\n                    </div>\n                </form>\n            </div>\n        ) : (\n            <div>\n                Enviado\n            </div>\n        )\n    }\n\n}\n\nexport default CustomerDetails;\n","import React, { Component } from 'react';\nimport { loopOverTotals, toCurrency } from '../../../util';\n\nclass MealsDetails extends Component {\n\n    constructor(props) {\n        super(props);\n        this.onChange = this.onChange.bind(this);\n        this.onChagenQty = this.onChagenQty.bind(this);\n    }\n    \n\n    onChagenQty(e) {\n        let price = this.props.restaurant.meals[ e.target.id].price;\n        let qty = e.target.value;\n        let total = price * qty;\n        \n        if(total === 0) { total = \"\";}\n\n        this.props.setTotalPrice(total, parseInt(e.target.id));\n    }\n\n    onChange(e) {\n        switch (e.target.name) {\n            case \"name\":\n                this.props.setName(e.target.value);\n                break;\n            \n            case \"sortBy\":\n                this.props.setSortBy(e.target.value);\n                break;\n        \n            default:\n                break;\n        }\n    }\n\n    render() { \n        const { restaurant, totalSelectedMeals } = this.props;\n\n        return (\n            <div className=\"content is-small\">\n                <h2>Order Food</h2>\n                <p>Please select the food</p>\n                <table className=\"table is-hoverable\">\n                    <thead>\n                        <tr>\n                            <th></th>\n                            <th>Name</th>\n                            <th>Description</th>\n                            <th>Price</th>\n                            <th>Qty</th>\n                            <th>Total</th>\n                        </tr>\n                </thead>\n                    <tbody>\n                        {\n                            restaurant.meals.map( (meal, id) => {\n                                return (\n                                    <tr key={id + '_product'}>\n                                        <td>\n                                            <figure className=\"image is-128x128\">\n                                                <img className=\"image is-64-64\" src={meal.img} alt={meal.name} />\n                                            </figure>\n                                        </td>\n                                        <td>{ meal.name }</td>\n                                        <td>{ meal.description }</td>\n                                        <td>{ toCurrency(meal.price) }</td>\n                                        <td>\n                                            <div className=\"select\">\n                                                <select onChange={this.onChagenQty} id={id}>\n                                                    <option value=\"0\">Select</option>\n                                                    { Array(20).fill('nums').map( (num, key) => <option key={key} values={key+1}>{ key + 1}</option>)}\n                                                </select>\n                                            </div>\n                                        </td>\n                                        <td>{ totalSelectedMeals[id] ? toCurrency(totalSelectedMeals[id].total) : '' }</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                        <tr>\n                            <td colSpan=\"6\"><h2 className=\"has-text-right\">{ loopOverTotals(totalSelectedMeals) !== 0 ? 'Total ' + toCurrency(loopOverTotals(totalSelectedMeals)) : '' }</h2></td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n\n        ) \n    }\n\n}\n\nexport default MealsDetails;\n","import React, { Component } from 'react';\nimport RestaurantDetails from './RestaurantDetails';\nimport CustomerDetails from './CustomerDetails';\nimport MealsDetails from './MealsDetails';\nimport styled from 'styled-components';\nimport { loopOverTotals } from '../../util';\nimport {Restaurant} from '../index'\n\nconst Container = styled.div`\n  top: 40px;\n  position: relative;\n  padding-bottom: 100px;\n`;\n\nclass Order extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.onClickHandler = this.onClickHandler.bind(this);\n\n        this.state = {\n            isSubmitted: false\n        }\n        console.log(this.state);\n    }\n\n    onClickHandler(){\n        this.setState({isSubmitted: true});\n        console.log(this.state);\n    }\n\n    componentWillMount() {\n        this.props.fetchRestaurantById(this.props.match.params.id);\n     }\n\n    render() { \n        const { restaurant,  totalSelectedMeals, orderDetails } = this.props;\n        const { isSubmitted } = this.state;\n\n        return restaurant.length !== 0  && !isSubmitted ? (\n            <Container className=\"container\">\n                <RestaurantDetails {...this.props} />\n                <hr />\n                <CustomerDetails {...this.props} />\n                <hr />\n                <MealsDetails {...this.props} />\n                \n                <div className=\"control is-pulled-right\">\n                    <button className=\"button is-success\" onClick={this.onClickHandler} disabled={ loopOverTotals(totalSelectedMeals) !== 0 ? '' : 'disabled' }>Order Food</button>\n                </div>\n\n            </Container>\n        ) : \n        !isSubmitted  ? (this.props.renderLoading) :  (\n            <Container className=\"container\">\n\n                <section className=\"hero\">\n                    <div className=\"hero-body\">\n                        <div className=\"container\">\n                            <h1 className=\"title\">\n                                Dear { orderDetails.name.name }, your order was confirmed!\n                            </h1>\n                            <h2 className=\"subtitle\">\n                                The { restaurant.commercialName }' restaurant is preparing your food. Your order will be delivered to { orderDetails.address.address } within of 30 minutes.\n                            </h2>\n                            <p>Thanks for trust in us.. </p>\n                        </div>\n                    </div>\n                </section>\n                \n            </Container>\n        );\n    }\n}\n\nOrder.defaultProps = {  \n    renderLoading: <Container className=\"container\">Loading...</Container>, \n};\n\nexport default Order;\n","import { connect } from 'react-redux';\nimport { fetchRestaurants, toggleModal } from '../../store/actions/actions';\nimport { Restaurants } from '../../components';\n\nconst mapStateToProps = state => ({\n    restaurants: state.data.filteredRestaurants,\n    name: state.data.name,\n    isLoading: state.data.isLoading,\n    selectedSortby: state.data.selectedSortby ? state.data.selectedSortby : false,\n    isModalActive: state.data.isModalActive,\n    reviewedRestaurant: state.data.reviewedRestaurant,\n});\n\nconst mapActionToProps = {\n    fetchRestaurants,\n    toggleModal\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Restaurants);","import { connect } from 'react-redux';\nimport { fetchRestaurantById, toggleModal, setTotalPrice, setOrderDetails } from '../../store/actions/actions';\nimport { Order } from '../../components';\n\nconst mapStateToProps = state => ({\n    restaurant: state.data.restaurant,\n    isModalActive: state.data.isModalActive,\n    reviewedRestaurant: state.data.reviewedRestaurant,\n    totalSelectedMeals: state.data.totalSelectedMeals,\n    orderDetails: state.data.orderDetails,\n});\n\nconst mapActionToProps = {\n    fetchRestaurantById,\n    toggleModal,\n    setTotalPrice,\n    setOrderDetails\n};\n\nexport default connect(mapStateToProps, mapActionToProps)(Order);","import \"bulma/css/bulma.css\";\nimport \"bulma-extensions/dist/css/bulma-extensions.min.css\";\nimport React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\nimport { Header, Error } from \"../../components\";\nimport RestaurantContainer from '../RestaurantsContainer';\nimport OrderContainer from '../OrderContainer'\n\nimport './styles.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <Header/>\n        <Router>\n          <Switch>\n            <Route exact path={`${process.env.PUBLIC_URL}/`} component={RestaurantContainer} />\n            <Route exact path={`${process.env.PUBLIC_URL}/restaurants`} component={RestaurantContainer} />\n            <Route exact path={`${process.env.PUBLIC_URL}/restaurants/:id`} component={OrderContainer} />\n            <Route component={Error} />\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\n\nconst Root = ({ store, history }) => (\n  <Provider store={store}>\n    <App history={history} />\n  </Provider>\n)\n\nRoot.propTypes = {\n  store: PropTypes.object.isRequired,\n  history: PropTypes.object.isRequired\n}\n\nexport default Root","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  FETCH_RESTAURANTS,\n  FETCH_RESTAURANT_BY_ID,\n  FILTER_RESTAURANTS,\n  SET_NAME,\n  SET_SORTBY,\n  TOGGLE_LOADING,\n  TOGGLE_MODAL,\n  SET_TOTAL_PRICE,\n  SET_ORDER_DETAILS,\n  } from '../actions/types';\n  \n  const initialState = {\n    restaurant: [],\n    restaurants: [],\n    filteredRestaurants: [],\n    name: \"\",\n    sortBy: \"\",\n    isLoading: false,\n    isModalActive: false,\n    reviewedRestaurant: [],\n    totalSelectedMeals: [],\n    orderDetails: {}\n  };\n  \n  export default function (state = initialState, action) {\n    switch (action.type) {\n  \n      case FETCH_RESTAURANTS:\n        return {\n          ...state,\n          restaurants: action.payload\n        };\n\n      case FETCH_RESTAURANT_BY_ID:\n        return {\n          ...state,\n          restaurant: action.payload\n        };\n      \n      case FILTER_RESTAURANTS:\n        return {\n          ...state,\n          filteredRestaurants: action.payload\n        };\n  \n      case SET_NAME:\n        return {\n          ...state,\n          name: action.payload\n        };\n  \n      case SET_SORTBY:\n        return {\n          ...state,\n          sortBy: action.payload\n        };\n    \n      case TOGGLE_LOADING:\n        return {\n          ...state,\n          isLoading: action.payload\n        };\n\n      case TOGGLE_MODAL:\n        return {\n          ...state,\n          isModalActive: action.payload,\n          reviewedRestaurant: action.reviewedRestaurant\n        };\n      \n      case SET_TOTAL_PRICE:\n        return {\n          ...state,\n          totalSelectedMeals: {\n            ...state.totalSelectedMeals,\n            [action.mealId] : {\n              total: action.total\n            }\n          }\n        };\n\n      case SET_ORDER_DETAILS:\n      const key = Object.keys(action.payload)[0];\n      state.orderDetails[key] = {\n        ...state.orderDetails[key],\n        [key] : action.payload[key]\n      }\n\n      return {\n        ...state\n      }\n  \n      default:\n        return state;\n    }\n  }","import { combineReducers } from 'redux';\n\nimport data from './reducers';\n\nexport default combineReducers({\n    data\n});","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  compose(\n    applyMiddleware(...middleware),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createBrowserHistory } from \"history\";\nimport \"./index.css\";\nimport Root from \"./containers/Root\";\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./store\";\n\nconst history = createBrowserHistory();\n\nReactDOM.render(<Root store={store} history={history} />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}